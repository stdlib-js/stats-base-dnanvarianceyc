// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,a=n.toString,o=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,_,p;if("object"!=typeof r||null===r||"[object Array]"===a.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(r,e)||l.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),_="get"in t,p="set"in t,f&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r},_=e()?c:f;function p(r,e,t,n){var a,o,i,u,l,c,f,_;if(r<=0)return NaN;if(1===r||0===n)return(l=t[0])==l&&r-e>0?0:NaN;for(o=n<0?(1-r)*n:0,_=0;_<r&&(l=t[o])!=l;_++)o+=n;if(_===r)return NaN;for(o+=n,a=l,u=0,_+=1,f=1;_<r;_++)(l=t[o])==l&&(u+=1/((f+=1)*(f-1))*(c=f*l-(a+=l))*c),o+=n;return(i=f-e)<=0?NaN:u/i}function b(r,e,t,n,a){var o,i,u,l,c,f,_,p;if(r<=0)return NaN;if(1===r||0===n)return(c=t[a])==c&&r-e>0?0:NaN;for(i=a,p=0;p<r&&(c=t[i])!=c;p++)i+=n;if(p===r)return NaN;for(i+=n,o=c,l=0,p+=1,_=1;p<r;p++)(c=t[i])==c&&(l+=1/((_+=1)*(_-1))*(f=_*c-(o+=c))*f),i+=n;return(u=_-e)<=0?NaN:l/u}(function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})})(p,"ndarray",b);export{p as default,b as ndarray};
//# sourceMappingURL=mod.js.map
